#!/usr/local/bin/perl

## -----------------------------------------------------------------------
## DIRECTORIES WE DON'T WANT TO MAKE IN BY DEFAULT
$baddirs = "MSVC.|CVS|lib|examples";

## THE MAKEFILE TEMPLATE
$MKTMPL = <<EOF;
#-----------------------------------------------------------------------------
# TOP LEVEL GLVU MAKEFILE
#-----------------------------------------------------------------------------

##----------------------------------------------------------------------------
## WARNING: THIS FILE WAS GENERATED AUTOMATICALLY FROM A MAKEFILE TEMPLATE!!
##          FEEL FREE TO MODIFY THIS GENERATED MAKEFILE FOR YOUR OWN
##          PURPOSES.
##
##          *HOWEVER* IF YOU ARE A GLVU DEVELOPER, DO *NOT* CHECK CHANGES
##          TO THIS MAKEFILE INTO THE SOURCE TREE.  MODIFY THE TEMPLATE 
##          IN makemakefile.pl INSTEAD.
##----------------------------------------------------------------------------

## If you are looking for where to set variables that will be seen by 
## the projects in all the subdirectories, check out makefile.inc

all: setup
	\@cd <DIR>; \$(MAKE)

debug: setup
	\$(MAKE) EXTRA_CFLAGS=-g

install: setup
	\@cd <DIR>; \$(MAKE) install

clean: setup
	\@cd <DIR>; \$(MAKE) clean

distclean: setup
	\@cd <DIR>; \$(MAKE) distclean

depsfiles= \\
   <DIRCONT>/.deps


setup: \$(depsfiles)
\$(depsfiles):
	\@touch -t 197209250044 \$\@

regen:
	perl makemakefile.pl > makefile.gen

EOF

## -----------------------------------------------------------------------
## PROGRAM CODE

## Find all subdirectories that have makefiles
@dirlist = glob("*/[Mm]akefile");

## Strip off the /Makefile part
@dirlist = grep(s%/[Mm]akefile%%, @dirlist);

## Remove all those known to be bad
@dirlist = grep(!/$baddirs/, @dirlist);

## Now get rid of duplicates
## (in case the dir had both 'Makefile' and 'makefile' for some reason.)
@dirtmp = @dirlist;
@dirlist = ();
$last = "";
for $d (@dirtmp)
{
    push(@dirlist,$d) unless $last eq $d;
    $last = $d;
}


for $l (split('\n', $MKTMPL))
{
    if ($l =~ /<DIR>/)
    {
	for $d (@dirlist)
	{
	    $t = $l;
	    $t =~ s/<DIR>/$d/g;
	    print "$t\n";
	}
    }
    elsif ($l =~ /<DIRCONT>/)
    {
	for $d (@dirlist)
	{
	    $t = $l;
	    $t =~ s/<DIRCONT>/$d/g;
		print "$t ";
	    if ($d ne $dirlist[$#dirlist]) {
		print "\\";
	    }
	    print "\n";
	}
    }
    else
    {
	print "$l\n";
    }
}
## -----------------------------------------------------------------------
## $Id: makemakefile.pl,v 1.4 2000/04/26 15:25:21 harrism Exp $
## -----------------------------------------------------------------------





